@model ClockingApp.Models.ClockingData.WeeklyClockingInfo
@{

    <form method="get" action="GetAllClockingsForUserAndWeek">
        <div class="form-group">
            <div class="containerGroup spaceBetween">
                <div class="containerGroup initial">
                    <label for="weekDate">Date</label>
                    <input class="form-control" type="date" id="weekDate" name="weekDate" />
                    <button type="submit" class="btn btn-steelblue">Show</button>
                </div>
                @if (Model.HasClockings)
                {
                    <div class="dropdown">
                        <button type="button" class="btn btn-light" id="dropdownTimeZoneSelector" data-bs-toggle="dropdown" aria-expanded="false">Download ↓</button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownTimeZoneSelector">
                            <li><a class="dropdown-item" href="@(Url.Action("GetClockingInvoiceForWeek","Clocking", new { weekNumber = Model.ClockingWeek, weekYear = Model.ClockingYear, gmtTimeZoneId = "GMT Standard Time"}))" target="_blank">GMT Standard Time (GMT+0)</a></li>
                            <li><a class="dropdown-item" href="@(Url.Action("GetClockingInvoiceForWeek","Clocking", new { weekNumber = Model.ClockingWeek, weekYear = Model.ClockingYear, gmtTimeZoneId = "W. Europe Standard Time"}))" target="_blank">Europe Standard Time (GMT+1)</a></li>
                        </ul>
                    </div>
                }
            </div>

            <small class="text-muted form-text">Week no. will be extracted from your date</small>
        </div>
    </form>
    @if (Model.HasClockings)
    {
        @await Component.InvokeAsync("WeeklyClocking", new { weeklyClockingInfo = Model })
    }
}

