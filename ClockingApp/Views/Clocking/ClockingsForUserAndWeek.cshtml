@model ClockingApp.Models.ClockingData.WeeklyClockingInfo
@{

    <form method="get" action="GetAllClockingsForUserAndWeek">
        <div class="form-group">
            <div class="containerGroup spaceBetween">
                <div class="containerGroup initial">
                    <label class="fullWidth" for="weekDate">Select Date</label>
                    <input class="form-control" type="date" id="weekDate" name="weekDate" />
                    <button type="submit" class="btn btn-steelblue">Show</button>
                </div>
                @if (Model.HasClockings)
                {
                    <button type="button" class="btn btn-light" onclick="window.open('@(Url.Action("GetClockingInvoiceForWeek","Clocking", new { weekNumber = Model.ClockingWeek}))', '_blank')">↓ Download</button>
                }
            </div>
            <small class="text-muted form-text">Week no. will be extracted from your date</small>
        </div>
    </form>

    //TODO: All this below should be a Component view
    @if (Model.HasClockings)
    {
        <div class="containerGroup spaceBetween">
            <div>
                <span class="groupLabel">User:</span>
                <span class="groupData">
                    @Model.Username
                </span>
            </div>
            <div>
                <span class="groupLabel">Working Hours:</span>
                <span class="groupData hasSecondSmallPrint">
                    @Model.PaidWorkingHours_formatted
                </span>
            </div>
            <div>
                <span class="groupLabel">Working Days:</span>
                <span class="groupData">
                    @Model.WorkingDaysCount
                </span>
            </div>
        </div>
        <p class="groupLabel smallMarginTop">Breakdown</p>
        <table class="table table-borderless">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Work Start</th>
                    <th>Work End</th>
                    <th>Work Duration</th>
                    <th>Breaks</th>
                    <th>Breaks Breakdown</th>
                </tr>
            </thead>
            <tbody>
                @foreach (ClockingApp.Models.ClockingData.Clocking clocking in Model.WeeklyClockings)
                {
                    <tr>
                        <td>@clocking.ClockingDate.ToString("D")</td>
                        <td>@clocking.WorkDay.StartDate.ToString("t")</td>
                        <td>@clocking.WorkDay.EndDate?.ToString("t")</td>
                        <td class="hasSecondSmallPrint">@clocking.WorkingHoursPaid_formatted</td>
                        <td>@String.Format("{0} Breaks ({1})", clocking.NumberOfBreaks, clocking.BreakDuration_formatted)</td>
                        <td>
                            @if (clocking.Breaks != null)
                            {
                                <ul>
                                    @foreach (var _break in clocking.Breaks)
                                    {
                                        <li>@String.Format("{0} → {1} ({2})", _break.StartDate.ToString("t"), _break.EndDate?.ToString("t"), _break.Duration_formatted)</li>
                                    }
                                </ul>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <p class="smallPrint">Week number is not to be confused with Payslip period. Week number shown refers to Clocking week stated above</p>
        <p class="secondSmallPrint">Working hours only include paid 15 minutes break. All additional breaks are not included in this figure.</p>
    }
}

