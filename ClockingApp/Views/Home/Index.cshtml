@model ClockingApp.Models.ClockingData.Clocking
@{
    ClockingApp.Models.ClockingData.Clocking clocking = Model;
    string username = ViewBag.username;
    DateTime currentDate = DateTime.Now.Date;
}

<section id="welcomeSection">
    <div class="text-center">
        <h4>Welcome, <small class="text-muted">@username</small></h4>
    </div>
</section>
<section id="todaysClocking">
    <div class="text-left">
        <h5>For Today, <small class="text-muted">@currentDate.ToString("D")</small></h5>
    </div>
    <div class="containerGroup initial smallMarginBottom">
        <div>
            @*TODO: Improve below adding condition checks for toggling visibility in Work and Break objects*@
            @if (clocking == null)
            {
                <button class="btn btn-steelblue rounded-pill" onclick="StartWork()">Start Work</button>
            }
            else if (clocking.WorkDay != null && clocking.WorkDay.IsWorkActive)
            {
                <button class="btn btn-outline-steelblue rounded-pill" onclick="FinishWork('@clocking._id')">Finish Work</button>
            }
        </div>
        <div>
            @if (clocking != null && clocking.WorkDay != null && clocking.WorkDay.IsWorkActive && !clocking.IsCurrentBreakActive())
            {
                <button class="btn btn-secondary rounded-pill" onclick="StartBreak('@clocking._id')">Start Break</button>
            }
            else if (clocking != null && clocking.IsCurrentBreakActive())
            {
                <button class="btn btn-outline-secondary rounded-pill" onclick="FinishBreak('@clocking._id')">Finish Break</button>
            }
        </div>
    </div>
    @if (clocking != null)
    {
        <div class="card">
            <div class="card-body">
                @if (clocking.WorkDay != null)
                {
                    <h5><span class="badge bg-steelblue">Work</span></h5>
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th>Start</th>
                                <th>End</th>
                                <th>Duration</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@clocking.WorkDay.StartDate.ToString("t")</td>
                                <td>@clocking.WorkDay.EndDate?.ToString("t")</td>
                                <td>@clocking.WorkDay.Duration_formatted</td>
                            </tr>
                        </tbody>
                    </table>
                }
                @if (clocking.Breaks != null && clocking.Breaks.Any())
                {
                    <h5><span class="badge bg-steelblue">Breaks</span></h5>
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th>Start</th>
                                <th>End</th>
                                <th>Duration</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (ClockingApp.Models.ClockingData.BreakDay _break in clocking.Breaks)
                            {
                                <tr>
                                    <td>@_break.StartDate.ToString("t")</td>
                                    <td>@_break.EndDate?.ToString("t")</td>
                                    <td>@_break.Duration_formatted</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    }
</section>